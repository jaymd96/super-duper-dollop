// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace OpenApiClient.Typed.Models
{
    /// <summary>
    /// Response from book search
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class SearchResponse : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Array of search results</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::OpenApiClient.Typed.Models.SearchDoc>? Docs { get; set; }
#nullable restore
#else
        public List<global::OpenApiClient.Typed.Models.SearchDoc> Docs { get; set; }
#endif
        /// <summary>Total number of results found</summary>
        public int? NumFound { get; set; }
        /// <summary>Whether the count is exact</summary>
        public bool? NumFoundExact { get; set; }
        /// <summary>The search query used</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Q { get; set; }
#nullable restore
#else
        public string Q { get; set; }
#endif
        /// <summary>Starting offset for pagination</summary>
        public int? Start { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::OpenApiClient.Typed.Models.SearchResponse"/> and sets the default values.
        /// </summary>
        public SearchResponse()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::OpenApiClient.Typed.Models.SearchResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::OpenApiClient.Typed.Models.SearchResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::OpenApiClient.Typed.Models.SearchResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "docs", n => { Docs = n.GetCollectionOfObjectValues<global::OpenApiClient.Typed.Models.SearchDoc>(global::OpenApiClient.Typed.Models.SearchDoc.CreateFromDiscriminatorValue)?.AsList(); } },
                { "numFound", n => { NumFound = n.GetIntValue(); } },
                { "numFoundExact", n => { NumFoundExact = n.GetBoolValue(); } },
                { "q", n => { Q = n.GetStringValue(); } },
                { "start", n => { Start = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::OpenApiClient.Typed.Models.SearchDoc>("docs", Docs);
            writer.WriteIntValue("numFound", NumFound);
            writer.WriteBoolValue("numFoundExact", NumFoundExact);
            writer.WriteStringValue("q", Q);
            writer.WriteIntValue("start", Start);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
