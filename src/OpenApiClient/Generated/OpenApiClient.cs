// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using Microsoft.Kiota.Serialization.Form;
using Microsoft.Kiota.Serialization.Json;
using Microsoft.Kiota.Serialization.Multipart;
using Microsoft.Kiota.Serialization.Text;
using OpenApiClient.Api;
using OpenApiClient.Authors;
using OpenApiClient.Books;
using OpenApiClient.Covers;
using OpenApiClient.Isbn;
using OpenApiClient.Search;
using OpenApiClient.SearchJson;
using OpenApiClient.Subjects;
using OpenApiClient.Works;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace OpenApiClient
{
    /// <summary>
    /// The main entry point of the SDK, exposes the configuration and the fluent API.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class OpenApiClient : BaseRequestBuilder
    {
        /// <summary>The api property</summary>
        public global::OpenApiClient.Api.ApiRequestBuilder Api
        {
            get => new global::OpenApiClient.Api.ApiRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The authors property</summary>
        public global::OpenApiClient.Authors.AuthorsRequestBuilder Authors
        {
            get => new global::OpenApiClient.Authors.AuthorsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The books property</summary>
        public global::OpenApiClient.Books.BooksRequestBuilder Books
        {
            get => new global::OpenApiClient.Books.BooksRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The covers property</summary>
        public global::OpenApiClient.Covers.CoversRequestBuilder Covers
        {
            get => new global::OpenApiClient.Covers.CoversRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The isbn property</summary>
        public global::OpenApiClient.Isbn.IsbnRequestBuilder Isbn
        {
            get => new global::OpenApiClient.Isbn.IsbnRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The search property</summary>
        public global::OpenApiClient.Search.SearchRequestBuilder Search
        {
            get => new global::OpenApiClient.Search.SearchRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The searchJson property</summary>
        public global::OpenApiClient.SearchJson.SearchJsonRequestBuilder SearchJson
        {
            get => new global::OpenApiClient.SearchJson.SearchJsonRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The subjects property</summary>
        public global::OpenApiClient.Subjects.SubjectsRequestBuilder Subjects
        {
            get => new global::OpenApiClient.Subjects.SubjectsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The works property</summary>
        public global::OpenApiClient.Works.WorksRequestBuilder Works
        {
            get => new global::OpenApiClient.Works.WorksRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::OpenApiClient.OpenApiClient"/> and sets the default values.
        /// </summary>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public OpenApiClient(IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}", new Dictionary<string, object>())
        {
            ApiClientBuilder.RegisterDefaultSerializer<JsonSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<TextSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<FormSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<MultipartSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<JsonParseNodeFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<TextParseNodeFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<FormParseNodeFactory>();
        }
    }
}
#pragma warning restore CS0618
