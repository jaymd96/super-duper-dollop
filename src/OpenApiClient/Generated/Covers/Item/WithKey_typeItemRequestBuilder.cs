// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using OpenApiClient.Covers.Item.WithValueWithSizeJpg;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace OpenApiClient.Covers.Item
{
    /// <summary>
    /// Builds and executes requests for operations under \covers\{key_type}
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class WithKey_typeItemRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::OpenApiClient.Covers.Item.WithKey_typeItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithKey_typeItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/covers/{key_type}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::OpenApiClient.Covers.Item.WithKey_typeItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithKey_typeItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/covers/{key_type}", rawUrl)
        {
        }
        /// <summary>
        /// Builds and executes requests for operations under \covers\{key_type}\{value}-{size}.jpg
        /// </summary>
        /// <returns>A <see cref="global::OpenApiClient.Covers.Item.WithValueWithSizeJpg.WithValueWithSizeJpgRequestBuilder"/></returns>
        /// <param name="size">The path parameter: size</param>
        /// <param name="value">The path parameter: value</param>
        public global::OpenApiClient.Covers.Item.WithValueWithSizeJpg.WithValueWithSizeJpgRequestBuilder WithValueWithSizeJpg(string size, string value)
        {
            if(string.IsNullOrEmpty(size)) throw new ArgumentNullException(nameof(size));
            if(string.IsNullOrEmpty(value)) throw new ArgumentNullException(nameof(value));
            return new global::OpenApiClient.Covers.Item.WithValueWithSizeJpg.WithValueWithSizeJpgRequestBuilder(PathParameters, RequestAdapter, size, value);
        }
    }
}
#pragma warning restore CS0618
